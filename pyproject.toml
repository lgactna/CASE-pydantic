[project]
name = "caselib"
version = "0.0.1"
description = "Pydantic-based definitions for the CASE/UCO 2.0 ontology"
requires-python = ">=3.11"

dependencies = [
  "pydantic>=2.9.2",
  "ruamel.yaml>=0.18.6",
  "rdflib>=7.1.1"
]

[project.optional-dependencies]
# pip install caselib[dev]
dev = [
  "autoflake",
  "black",
  "flake8",
  "flake8-bugbear",
  "isort",
  "pre-commit",
  "pytest",
]

# [build-system]
# requires = ["setuptools>=73.0"]
# build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["caselib"]

[tool.flake8]
extend_ignore = [
  "E501", # silence "line too long"
  "E203" # silence "whitespace before :"
]

[tool.mypy]
mypy_path = "./caselib"
strict_optional = true

# The notion that attributes can either be a list of objects or *just* that object
# makes mypy unhappy for good reason. This is consistent with the existing CASE
# Python bindings, as well as RDF in general, so we ignore errors related to
# type unions.
[[tool.mypy.overrides]]
module = "caselib.scripts.example"
disable_error_code = "union-attr"

[tool.isort]
profile = "black"
